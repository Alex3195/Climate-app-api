
#PostgreSql config Dev Mode
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://localhost:5432/climate-app-db
spring.datasource.username=postgres
spring.datasource.password=Alex!123
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# LOGGING
logging.level.org.thymeleaf=off
logging.level.org.hibernate=ERROR
logging.level.org.springframework=ERROR


# LOGGING
logging.file.name=logs/climate-app.log
logging.file.max-size=1GB
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} - %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n


#File Upload
file.store.path=D:\\istore
frontend.api.urls=http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003
